#BlueJ class context
comment0.target=SilkRoad
comment0.text=\r\n\ Gestiona\ la\ simulaci\u00F3n\ de\ "Silk\ Road",\ un\ tablero\ en\ espiral\ donde\ interact\u00FAan\r\n\ robots\ y\ tiendas.\ Esta\ clase\ controla\ el\ estado\ del\ juego,\ la\ l\u00F3gica\ de\ movimiento,\r\n\ la\ colocaci\u00F3n\ de\ elementos\ y\ la\ interfaz\ gr\u00E1fica.\r\n
comment1.params=size
comment1.target=void\ init(int)
comment1.text=\r\n\ Inicializa\ los\ componentes\ principales\ de\ la\ simulaci\u00F3n.\r\n\ Este\ m\u00E9todo\ es\ utilizado\ por\ los\ constructores\ para\ evitar\ la\ duplicaci\u00F3n\ de\ c\u00F3digo.\r\n\ @param\ size\ La\ dimensi\u00F3n\ del\ tablero\ (para\ un\ tablero\ de\ n\ x\ n).\r\n
comment10.params=
comment10.target=void\ updateBlinkingRobot()
comment10.text=\r\n\ Identifica\ al\ robot\ con\ la\ mayor\ cantidad\ de\ tenges\ (si\ es\ mayor\ a\ cero)\ y\ lo\r\n\ hace\ parpadear\ en\ la\ interfaz\ gr\u00E1fica\ para\ destacarlo.\r\n
comment11.params=
comment11.target=void\ resupplyStores()
comment11.text=\r\n\ Reabastece\ todas\ las\ tiendas,\ restaurando\ sus\ tenges\ a\ su\ valor\ inicial.\r\n
comment12.params=
comment12.target=void\ returnRobots()
comment12.text=\r\n\ Devuelve\ todos\ los\ robots\ a\ sus\ posiciones\ iniciales\ y\ reinicia\ sus\ tenges\ a\ cero.\r\n
comment13.params=
comment13.target=void\ reboot()
comment13.text=\r\n\ Reinicia\ toda\ la\ simulaci\u00F3n\ a\ su\ estado\ original.\r\n\ Las\ tiendas\ se\ reabastecen\ y\ los\ robots\ vuelven\ a\ su\ punto\ de\ partida.\r\n
comment14.params=
comment14.target=int\ profit()
comment14.text=\r\n\ Calcula\ la\ ganancia\ total\ actual,\ sumando\ los\ tenges\ de\ todos\ los\ robots.\r\n\ @return\ La\ ganancia\ total\ acumulada.\r\n
comment15.params=
comment15.target=int[][]\ stores()
comment15.text=\r\n\ Devuelve\ el\ estado\ actual\ de\ todas\ las\ tiendas.\r\n\ @return\ Una\ matriz\ 2D\ donde\ cada\ fila\ es\ [ubicaci\u00F3n,\ tenges\ actuales].\r\n
comment16.params=
comment16.target=int[][]\ emptiedStores()
comment16.text=\r\n\ Devuelve\ cu\u00E1ntas\ veces\ ha\ sido\ vaciada\ cada\ tienda.\r\n\ @return\ Una\ matriz\ 2D\ donde\ cada\ fila\ es\ [ubicaci\u00F3n,\ n\u00FAmero\ de\ veces\ vaciada].\r\n
comment17.params=
comment17.target=int[][]\ profitPerMove()
comment17.text=\r\n\ Devuelve\ el\ historial\ de\ ganancias\ por\ movimiento\ para\ cada\ robot.\r\n\ @return\ Una\ matriz\ 2D\ donde\ cada\ fila\ representa\ un\ robot.\ El\ primer\ elemento\ es\r\n\ la\ ubicaci\u00F3n\ del\ robot,\ y\ los\ siguientes\ son\ las\ ganancias\ de\ cada\ movimiento.\r\n
comment18.params=
comment18.target=int[][]\ robots()
comment18.text=\r\n\ Devuelve\ el\ estado\ actual\ de\ todos\ los\ robots.\r\n\ @return\ Una\ matriz\ 2D\ donde\ cada\ fila\ es\ [ubicaci\u00F3n,\ tenges\ actuales].\r\n
comment19.params=
comment19.target=void\ makeVisible()
comment19.text=\r\n\ Hace\ visible\ la\ interfaz\ gr\u00E1fica\ de\ la\ simulaci\u00F3n.\r\n
comment2.params=size
comment2.target=SilkRoad(int)
comment2.text=\r\n\ Constructor\ para\ crear\ una\ simulaci\u00F3n\ de\ Silk\ Road\ con\ un\ tama\u00F1o\ de\ tablero\ espec\u00EDfico.\r\n\ @param\ size\ La\ dimensi\u00F3n\ del\ tablero\ (e.g.,\ 5\ para\ un\ tablero\ de\ 5x5).\r\n
comment20.params=
comment20.target=void\ makeInvisible()
comment20.text=\r\n\ Oculta\ los\ elementos\ de\ la\ interfaz\ gr\u00E1fica.\r\n
comment21.params=
comment21.target=void\ finish()
comment21.text=\r\n\ Termina\ la\ simulaci\u00F3n,\ cierra\ la\ ventana\ y\ libera\ los\ recursos.\r\n
comment22.params=
comment22.target=boolean\ ok()
comment22.text=\r\n\ Verifica\ si\ la\ \u00FAltima\ operaci\u00F3n\ realizada\ fue\ exitosa.\r\n\ @return\ true\ si\ la\ \u00FAltima\ operaci\u00F3n\ se\ complet\u00F3\ correctamente,\ false\ en\ caso\ contrario.\r\n
comment23.params=n
comment23.target=int[][]\ generateSpiral(int)
comment23.text=\r\n\ Genera\ una\ matriz\ que\ representa\ un\ camino\ en\ espiral.\r\n\ @param\ n\ La\ dimensi\u00F3n\ de\ la\ matriz\ (n\ x\ n).\r\n\ @return\ La\ matriz\ 2D\ con\ los\ n\u00FAmeros\ ordenados\ en\ espiral.\r\n
comment24.params=
comment24.target=SilkRoadView\ getView()
comment24.text=\r\n\ Obtiene\ la\ instancia\ de\ la\ vista\ (GUI).\r\n\ @return\ el\ objeto\ SilkRoadView.\r\n
comment25.params=
comment25.target=int\ getMaxProfit()
comment25.text=\r\n\ Calcula\ la\ m\u00E1xima\ ganancia\ posible\ en\ la\ simulaci\u00F3n,\ que\ es\ la\ suma\r\n\ de\ los\ tenges\ iniciales\ de\ todas\ las\ tiendas.\r\n\ @return\ La\ m\u00E1xima\ ganancia\ te\u00F3rica.\r\n
comment26.params=
comment26.target=java.util.ArrayList\ getRobots()
comment26.text=\r\n\ Obtiene\ la\ lista\ de\ todos\ los\ robots\ en\ la\ simulaci\u00F3n.\r\n\ @return\ Un\ ArrayList\ de\ objetos\ Robot.\r\n
comment27.params=
comment27.target=java.util.ArrayList\ getStores()
comment27.text=\r\n\ Obtiene\ la\ lista\ de\ todas\ las\ tiendas\ en\ la\ simulaci\u00F3n.\r\n\ @return\ Un\ ArrayList\ de\ objetos\ Store.\r\n
comment28.params=
comment28.target=int\ getBoardSize()
comment28.text=\r\n\ Obtiene\ el\ n\u00FAmero\ total\ de\ casillas\ en\ el\ tablero.\r\n\ @return\ El\ tama\u00F1o\ total\ del\ tablero\ (size\ *\ size).\r\n
comment29.params=milliseconds
comment29.target=void\ wait(int)
comment29.text=\r\n\ Pausa\ la\ ejecuci\u00F3n\ del\ hilo\ actual\ durante\ un\ tiempo\ determinado.\r\n\ \u00DAtil\ para\ controlar\ la\ velocidad\ de\ la\ simulaci\u00F3n\ visual.\r\n\ @param\ milliseconds\ El\ tiempo\ a\ esperar\ en\ milisegundos.\r\n
comment3.params=marathonInput
comment3.target=SilkRoad(int[][])
comment3.text=\r\n\ Constructor\ para\ crear\ una\ simulaci\u00F3n\ a\ partir\ de\ una\ matriz\ de\ datos\ de\ entrada.\r\n\ Este\ formato\ es\ \u00FAtil\ para\ escenarios\ predefinidos,\ como\ maratones\ de\ programaci\u00F3n.\r\n\ @param\ marathonInput\ Una\ matriz\ donde\ cada\ fila\ define\ un\ robot\ o\ una\ tienda.\r\n\ Formato\:\ {tipo,\ ubicaci\u00F3n,\ [tenges]}\r\n\ -\ tipo\ 1\:\ Robot\r\n\ -\ tipo\ 2\:\ Tienda\r\n
comment4.params=location\ tenges
comment4.target=void\ placeStore(int,\ int)
comment4.text=\r\n\ Coloca\ una\ nueva\ tienda\ en\ una\ ubicaci\u00F3n\ espec\u00EDfica\ del\ tablero.\r\n\ La\ operaci\u00F3n\ falla\ si\ la\ ubicaci\u00F3n\ est\u00E1\ fuera\ de\ los\ l\u00EDmites\ o\ ya\ est\u00E1\ ocupada.\r\n\ @param\ location\ La\ posici\u00F3n\ en\ el\ tablero\ (desde\ 1\ hasta\ size*size).\r\n\ @param\ tenges\ La\ cantidad\ inicial\ de\ "tenges"\ (moneda)\ en\ la\ tienda.\r\n
comment5.params=location
comment5.target=void\ placeRobot(int)
comment5.text=\r\n\ Coloca\ un\ nuevo\ robot\ en\ una\ ubicaci\u00F3n\ espec\u00EDfica\ del\ tablero.\r\n\ La\ operaci\u00F3n\ falla\ si\ la\ ubicaci\u00F3n\ est\u00E1\ fuera\ de\ los\ l\u00EDmites\ o\ ya\ est\u00E1\ ocupada.\r\n\ @param\ location\ La\ posici\u00F3n\ en\ el\ tablero\ (desde\ 1\ hasta\ size*size).\r\n
comment6.params=location
comment6.target=void\ removeStore(int)
comment6.text=\r\n\ Elimina\ una\ tienda\ de\ una\ ubicaci\u00F3n\ espec\u00EDfica.\r\n\ @param\ location\ La\ posici\u00F3n\ de\ la\ tienda\ a\ eliminar\ (desde\ 1\ hasta\ size*size).\r\n
comment7.params=location
comment7.target=void\ removeRobot(int)
comment7.text=\r\n\ Elimina\ un\ robot\ de\ una\ ubicaci\u00F3n\ espec\u00EDfica.\r\n\ @param\ location\ La\ posici\u00F3n\ del\ robot\ a\ eliminar\ (desde\ 1\ hasta\ size*size).\r\n
comment8.params=
comment8.target=void\ moveRobots()
comment8.text=\r\n\ Activa\ el\ movimiento\ autom\u00E1tico\ para\ todos\ los\ robots.\ Cada\ robot\ busca\ la\ tienda\r\n\ m\u00E1s\ rentable\ (ganancia\ -\ costo\ de\ movimiento)\ y\ se\ mueve\ hacia\ ella\ para\ vaciarla.\r\n\ Solo\ se\ mover\u00E1n\ si\ la\ ganancia\ potencial\ es\ positiva.\r\n
comment9.params=location\ steps
comment9.target=void\ moveRobot(int,\ int)
comment9.text=\r\n\ Mueve\ un\ robot\ espec\u00EDfico\ un\ n\u00FAmero\ determinado\ de\ pasos\ a\ lo\ largo\ de\ la\ espiral.\r\n\ El\ robot\ se\ detendr\u00E1\ en\ la\ primera\ tienda\ con\ tenges\ que\ encuentre\ en\ su\ camino.\r\n\ @param\ location\ La\ ubicaci\u00F3n\ actual\ del\ robot\ a\ mover\ (desde\ 1\ hasta\ size*size).\r\n\ @param\ steps\ El\ n\u00FAmero\ de\ pasos\ a\ mover.\ Positivo\ para\ avanzar,\ negativo\ para\ retroceder.\r\n
numComments=30
