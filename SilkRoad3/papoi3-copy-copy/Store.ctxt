#BlueJ class context
comment0.target=Store
comment0.text=\r\n\ Representa\ una\ tienda\ en\ la\ simulaci\u00F3n\ de\ Silk\ Road.\r\n\ Cada\ tienda\ tiene\ una\ ubicaci\u00F3n,\ una\ cantidad\ de\ "tenges"\ (moneda)\ y\ un\ color.\r\n\ El\ color\ cambia\ a\ negro\ cuando\ la\ tienda\ es\ vaciada\ por\ un\ robot.\r\n
comment1.params=location\ tenges
comment1.target=Store(int,\ int)
comment1.text=\r\n\ Constructor\ para\ crear\ una\ nueva\ tienda.\r\n\ @param\ location\ La\ posici\u00F3n\ de\ la\ tienda\ en\ el\ tablero\ (basada\ en\ \u00EDndice\ 0).\r\n\ @param\ tenges\ La\ cantidad\ inicial\ de\ tenges.\ Se\ asegura\ que\ sea\ al\ menos\ 1.\r\n
comment10.params=
comment10.target=void\ resupply()
comment10.text=\r\n\ Reabastece\ la\ tienda,\ restaurando\ sus\ tenges\ al\ valor\ inicial.\r\n
comment11.params=
comment11.target=int\ getCollected()
comment11.text=\r\n\ Obtiene\ el\ total\ de\ tenges\ que\ han\ sido\ recolectados\ de\ esta\ tienda.\r\n\ @return\ El\ total\ de\ tenges\ recolectados.\r\n
comment12.params=
comment12.target=StoreView\ getView()
comment12.text=\r\n\ Obtiene\ la\ vista\ gr\u00E1fica\ asociada\ a\ esta\ tienda.\r\n\ @return\ La\ instancia\ de\ StoreView.\r\n
comment13.params=v
comment13.target=void\ setView(StoreView)
comment13.text=\r\n\ Asigna\ una\ vista\ (representaci\u00F3n\ gr\u00E1fica)\ a\ esta\ tienda.\r\n\ @param\ v\ La\ instancia\ de\ StoreView\ a\ asociar.\r\n
comment14.params=
comment14.target=java.lang.String\ getColor()
comment14.text=\r\n\ Devuelve\ el\ color\ actual\ de\ la\ tienda.\ Si\ la\ tienda\ est\u00E1\ vac\u00EDa\ (tenges\ <\=\ 0),\r\n\ devuelve\ "black".\ De\ lo\ contrario,\ devuelve\ su\ color\ asignado.\r\n\ @return\ El\ nombre\ del\ color\ como\ un\ String.\r\n
comment15.params=
comment15.target=void\ updateView()
comment15.text=\r\n\ M\u00E9todo\ privado\ para\ actualizar\ la\ representaci\u00F3n\ gr\u00E1fica\ de\ la\ tienda\r\n\ si\ existe\ una\ vista\ asociada.\r\n
comment2.params=
comment2.target=java.lang.String\ getNextUniqueColor()
comment2.text=\r\n\ Asigna\ un\ color\ \u00FAnico\ de\ la\ lista\ de\ colores\ disponibles\ de\ forma\ c\u00EDclica.\r\n\ @return\ Un\ String\ que\ representa\ el\ color\ asignado.\r\n
comment3.params=
comment3.target=void\ empty()
comment3.text=\r\n\ Vac\u00EDa\ la\ tienda,\ poniendo\ sus\ tenges\ a\ 0\ y\ actualizando\ las\ estad\u00EDsticas.\r\n
comment4.params=
comment4.target=void\ reboot()
comment4.text=\r\n\ Reinicia\ la\ tienda\ a\ su\ estado\ completamente\ original.\r\n\ Restaura\ los\ tenges\ iniciales\ y\ resetea\ los\ contadores.\r\n
comment5.params=
comment5.target=int\ getTimesEmptied()
comment5.text=\r\n\ Obtiene\ el\ n\u00FAmero\ de\ veces\ que\ la\ tienda\ ha\ sido\ vaciada.\r\n\ @return\ El\ contador\ de\ veces\ que\ ha\ sido\ vaciada.\r\n
comment6.params=
comment6.target=int\ getLocation()
comment6.text=\r\n\ Obtiene\ la\ ubicaci\u00F3n\ de\ la\ tienda\ en\ el\ tablero.\r\n\ @return\ La\ posici\u00F3n\ de\ la\ tienda.\r\n
comment7.params=
comment7.target=int\ getTenges()
comment7.text=\r\n\ Obtiene\ la\ cantidad\ actual\ de\ tenges\ en\ la\ tienda.\r\n\ @return\ Los\ tenges\ actuales.\r\n
comment8.params=
comment8.target=int\ getInitialTenges()
comment8.text=\r\n\ Obtiene\ la\ cantidad\ inicial\ de\ tenges\ con\ la\ que\ se\ cre\u00F3\ la\ tienda.\r\n\ @return\ Los\ tenges\ iniciales.\r\n
comment9.params=v
comment9.target=void\ setTenges(int)
comment9.text=\r\n\ Establece\ la\ cantidad\ de\ tenges\ a\ un\ valor\ espec\u00EDfico.\r\n\ @param\ v\ El\ nuevo\ valor\ de\ tenges.\r\n
numComments=16
